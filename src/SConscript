Import('env')
import re

machine_lib = SConscript('./machine/SConscript', exports='env')
bootloader_lib = SConscript('./bootloader/SConscript', exports='env')
loader_lib = SConscript('./loader/SConscript', exports='env')
debugging_lib = SConscript('./debugging/SConscript', exports='env')
demo_program_lib = SConscript('./demo_program/SConscript', exports='env')

env.Program('bootloader', bootloader_lib + machine_lib)
env.Program('loader', loader_lib + machine_lib)
debugging = env.Program('debugging', debugging_lib + demo_program_lib + machine_lib, LINKFLAGS='$LINKFLAGS --debug')
env.Clean(debugging, 'debugging.dbg.json')



def make_16(target, source, env):
    text = source[0].get_text_contents()
    text = re.sub('TARG CDM16E\n', 'TARG CDM16\n', text)
    with open(target[0].get_abspath(), 'w') as f:
        f.write(text)

bld = Builder(
    action=make_16,
    suffix='_16.lib',
    src_suffix='.lib',
)
env.Append(BUILDERS={'Make16': bld})
env.Make16(machine_lib)
env.Make16(debugging_lib)
env.Make16(demo_program_lib)